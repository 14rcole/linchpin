/* This job builds the LinchPin executor container based upon * config/dockerfiles/linchpin within
 * https://github.com/CentOS-PaaS-SIG/contra-env-sample-project
 * and a couple of other projects which generate LinchPin docker images
 *
 * This Jenkinsfile will be run after a release of LinchPin is complete,
 * producing and publishing the dockerfile in the appropriate locations.
 */

import com.cloudbees.plugins.credentials.Credentials

env.ghprbGhRepository = env.ghprbGhRepository ?: 'CentOS-PaaS-SIG/linchpin'
env.ghprbActualCommit = env.ghprbActualCommit ?: 'master'

// Needed for podTemplate()
env.SLAVE_TAG = env.SLAVE_TAG ?: 'stable'
env.TAG_NAME = env.TAG_NAME ?: 'v1.6.3a1'

env.IMAGE_NAME = env.IMAGE_NAME ?: 'linchpin'
OPENSHIFT_NAMESPACE = env.OPENSHIFT_NAMESPACE ?: 'continuous-infra'
DOCKER_REPO_URL = env.DOCKER_REPO_URL ?: '172.30.254.79:5000'

// libraries.each { name, repo ->
//     library identifier: "${name}@${repo[0]}",
//             retriever: modernSCM([$class: 'GitSCMSource',
//                                   remote: repo[1]])
// }

properties([
  buildDiscarder(logRotator(artifactDaysToKeepStr: '30', artifactNumToKeepStr: '15', daysToKeepStr: '90', numToKeepStr: '30')),
  [$class: 'GithubProjectProperty', displayName: '', projectUrlStr: 'https://github.com/' + env.ghprbGhRepository],
  disableConcurrentBuilds(),
  parameters(
    [
        string(defaultValue: 'master',
               description: '',
               name: 'ghprbActualCommit'),
        string(defaultValue: '',
               description: 'Github Repository',
               name: 'ghprbGhRepository'),
        string(defaultValue: 'stable',
               description: 'Tag for slave image',
               name: 'SLAVE_TAG'),
        string(defaultValue: 'contrainfra',
               description: 'Namespace where Docker Container resides',
               name: 'DOCKER_NAMESPACE'),
        string(defaultValue: 'linchpin',
               description: 'Install from pypi (linchpin), or from the git checkout (.).',
               name: 'INSTALL_LOCATION'),
        string(defaultValue: '',
               description: 'Docker Registry',
               name: 'DOCKER_REGISTRY'),
    ]
  ),
])

def test_cmd = "echo testing..."

def containers = ['buildah']
def build_root = "config/Dockerfiles/${env.IMAGE_NAME}"
def credentials = [usernamePassword(credentialsId: 'linchpin-docker',
                   usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]

// remove the v from the TAG
def ver = env.TAG_NAME
def version = ver.substring(1)

podTemplate = [containers: containers,
               docker_repo_url: DOCKER_REPO_URL,
               openshift_namespace: OPENSHIFT_NAMESPACE,
               podName: 'buildah-builder',
               jenkins_slave_image: 'jenkins-continuous-infra-slave:' + SLAVE_TAG]

buildTestContainer(podTemplateProps: podTemplate,
                   version: version,
                   test_cmd: test_cmd,
                   build_root: build_root,
                   image_name: IMAGE_NAME,
                   send_metrics: false,
                   docker_registry: DOCKER_REGISTRY,
                   docker_namespace: DOCKER_NAMESPACE,
                   credentials: credentials)

